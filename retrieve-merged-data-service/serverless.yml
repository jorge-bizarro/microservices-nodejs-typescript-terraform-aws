service: retrieve-merged-data-lambda

provider:
  name: aws
  runtime: nodejs20.x
  stage: dev
  region: us-west-2
  memorySize: 128
  timeout: 15
  architecture: arm64
  logRetentionInDays: 3
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
    CACHE_TABLE_NAME: ${ssm:/challengue-rimac/dynamodb/swapi_characters_cache_table_name}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: ${ssm:/challengue-rimac/dynamodb/swapi_characters_cache_table_arn}

functions:
  openapi:
    handler: src/openapi.handler
    events:
      - http:
          path: openapi.yml
          method: get
          cors: true

  docs:
    handler: src/docs.handler
    events:
      - http:
          path: docs
          method: get
          cors: true

  retrieveMergedData:
    handler: src/handler.handler
    events:
      - http:
          path: fusionados/{id}
          method: get
          cors: true
          private: true
          documentation:
            operationId: retrieveMergedData
            summary: "Obtener personaje de Star Wars y un consejo suyo"
            description: "Obtener personajes de Star Wars y un consejo suyo"
            tag: Star Wars
            methodResponses:
              - statusCode: 200
                responseBody:
                  description: "Respuesta exitosa"
                responseModels:
                  application/json: SearchCharacterResponse
              - statusCode: 401
                responseBody:
                  description: "No autorizado - API key inválida o faltante"
                responseModels:
                  application/json: ErrorResponse
              - statusCode: 403
                responseBody:
                  description: "Acceso prohibido"
                responseModels:
                  application/json: ErrorResponse
              - statusCode: 429
                responseBody:
                  description: "Rate limit excedido"
                responseModels:
                  application/json: ErrorResponse
              - statusCode: 500
                responseBody:
                  description: "Error interno del servidor"
                responseModels:
                  application/json: ErrorResponse

plugins:
  - serverless-offline
  - serverless-openapi-documentation

custom:
  esbuild:
    bundle: true
    minify: true
    target: 'node20'
    platform: 'node'
    sourcemap: true
    sourcesContent: false
    external:
      - '@aws-sdk/*'
    packager: npm
  prune:
    automatic: true
    number: 1
  documentation:
    version: "1.0.0"
    title: "Obtener personaje de Star Wars y un consejo suyo"
    description: "Obtener personajes de Star Wars y un consejo suyo"
    openapi: '3.0.0'
    basePath: /dev
    tags:
      - name: 'Star Wars'
        description: 'Endpoints relacionados con Star Wars'
    models:
      - name: ErrorResponse
        contentType: application/json
        schema:
          type: object
          properties:
            message:
              type: string
              description: "Mensaje de error"
      - name: SearchCharacterResponse
        description: 'Respuesta exitosa'
        contentType: application/json
        schema:
          type: object
          properties:
            nombre:
              type: string
              description: "Nombre del personaje"
            altura:
              type: string
              description: "Altura del personaje"
            masa:
              type: string
              description: "Peso del personaje"
            consejo:
              type: string
              description: "Consejo del personaje"
            color_de_cabello:
              type: string
              description: "Color de cabello del personaje"
            color_de_ojos:
              type: string
              description: "Color de ojos del personaje"
            color_de_piel:
              type: string
              description: "Color de piel del personaje"
            anio_de_nacimiento:
              type: string
              description: "Año de nacimiento del personaje"
            genero:
              type: string
              description: "Genero del personaje"

package:
  individually: true
  excludeDevDependencies: true
  patterns:
    - 'src/**'
    - openapi.yml

resources:
  Outputs:
    ApiGatewayRestApiId:
      Value: !Ref ApiGatewayRestApi
      Export:
        Name: ApiGatewayRestApiId

  Resources:
    StoreApiGatewayIdInSSM:
      Type: AWS::SSM::Parameter
      Properties:
        Name: "/challenge-rimac/retrieve-merged-data-service/api-gateway-id"
        Type: String
        Value: !Ref ApiGatewayRestApi
